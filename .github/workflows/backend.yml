name: backend
on:
  pull_request:
    branches:
      - "main"

jobs:
  changes:
    runs-on: ubuntu-latest
    outputs:
      backend: ${{ steps.filter.outputs.backend }}
    steps:
      - uses: actions/checkout@v4
      - uses: dorny/paths-filter@v3
        id: filter
        with:
          filters: |
            backend:
              - 'backend/**'

  backend-lint:
    name: backend-lint
    runs-on: ubuntu-latest
    needs: changes
    if: needs.changes.outputs.backend == 'true'
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: "1.22"
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v6
        with:
          version: latest
          working-directory: ./backend/
          args: --timeout=5m

  backend-tests:
    name: backend-tests
    runs-on: ubuntu-latest
    needs: changes
    if: needs.changes.outputs.backend == 'true'
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: "1.22"
      
      - name: Run Tests
        run: |
          cd backend
          make test
      
      - name: Generate Coverage Report
        run: |
          cd backend
          go test ./... -v -coverprofile=coverage.out
          go tool cover -func=coverage.out
      
      - name: Check Coverage Threshold
        run: |
          cd backend
          # Extract total coverage percentage
          COVERAGE=$(go tool cover -func=coverage.out | grep total | awk '{print substr($3, 1, length($3)-1)}')
          echo "Total coverage: $COVERAGE%"
          
          # Set your minimum coverage threshold (adjust as needed)
          THRESHOLD=70
          
          # Compare coverage with threshold
          if (( $(echo "$COVERAGE < $THRESHOLD" | bc -l) )); then
            echo "❌ Coverage $COVERAGE% is below threshold $THRESHOLD%"
            exit 1
          else
            echo "✅ Coverage $COVERAGE% meets threshold $THRESHOLD%"
          fi
      
      # Optional: Upload coverage report as artifact
      - name: Upload Coverage Report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: coverage-report
          path: backend/coverage.out