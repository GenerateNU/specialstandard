/**
 * Generated by orval v7.13.1 🍺
 * Do not edit manually.
 * The Special Standard API
 * OpenAPI spec version: 0.1.0
 */
import type {
  CreateResourceBody,
  GetResourcesParams,
  Resource,
  UpdateResourceBody,
} from './theSpecialStandardAPI.schemas'

import { customAxios } from './apiClient'

export function getResources() {
  /**
   * Retrieve all resources from the database
   * @summary Get all resources
   */
  const getResources = (params?: GetResourcesParams) => {
    return customAxios<Resource[]>({
      url: `/resources`,
      method: 'GET',
      params,
    })
  }
  /**
   * Create a new resource in the database
   * @summary Create a new resource
   */
  const postResources = (createResourceBody: CreateResourceBody) => {
    return customAxios<Resource>({
      url: `/resources`,
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      data: createResourceBody,
    })
  }
  /**
   * Retrieve a specific resource by its ID
   * @summary Get resource by ID
   */
  const getResourcesId = (id: string) => {
    return customAxios<Resource>({ url: `/resources/${id}`, method: 'GET' })
  }
  /**
   * Update an existing resource in the database
   * @summary Update a resource
   */
  const patchResourcesId = (
    id: string,
    updateResourceBody: UpdateResourceBody,
  ) => {
    return customAxios<Resource>({
      url: `/resources/${id}`,
      method: 'PATCH',
      headers: { 'Content-Type': 'application/json' },
      data: updateResourceBody,
    })
  }
  /**
   * Delete an existing resource from the database
   * @summary Delete a resource
   */
  const deleteResourcesId = (id: string) => {
    return customAxios<void>({ url: `/resources/${id}`, method: 'DELETE' })
  }
  return {
    getResources,
    postResources,
    getResourcesId,
    patchResourcesId,
    deleteResourcesId,
  }
}
export type GetResourcesResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getResources>['getResources']>>
>
export type PostResourcesResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getResources>['postResources']>>
>
export type GetResourcesIdResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getResources>['getResourcesId']>>
>
export type PatchResourcesIdResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getResources>['patchResourcesId']>>
>
export type DeleteResourcesIdResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getResources>['deleteResourcesId']>>
>
