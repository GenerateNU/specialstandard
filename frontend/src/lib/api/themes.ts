/**
 * Generated by orval v7.13.2 🍺
 * Do not edit manually.
 * The Special Standard API
 * OpenAPI spec version: 0.1.0
 */
import type {
  CreateThemeInput,
  DeleteThemesId200,
  GetThemesParams,
  Theme,
  UpdateThemeInput,
} from "./theSpecialStandardAPI.schemas";

import { customAxios } from "./apiClient";

export const getThemes = () => {
  /**
   * Retrieve all themes from the database with optional filtering by month, year, and name search
   * @summary Get all themes
   */
  const getThemes = (params?: GetThemesParams) => {
    return customAxios<Theme[]>({ url: `/themes`, method: "GET", params });
  };
  /**
   * Create a new theme for therapy sessions
   * @summary Create a new theme
   */
  const postThemes = (createThemeInput: CreateThemeInput) => {
    return customAxios<Theme>({
      url: `/themes`,
      method: "POST",
      headers: { "Content-Type": "application/json" },
      data: createThemeInput,
    });
  };
  /**
   * Retrieve a specific theme by its UUID
   * @summary Get theme by ID
   */
  const getThemesId = (id: string) => {
    return customAxios<Theme>({ url: `/themes/${id}`, method: "GET" });
  };
  /**
   * Update an existing theme (partial update)
   * @summary Update theme
   */
  const patchThemesId = (id: string, updateThemeInput: UpdateThemeInput) => {
    return customAxios<Theme>({
      url: `/themes/${id}`,
      method: "PATCH",
      headers: { "Content-Type": "application/json" },
      data: updateThemeInput,
    });
  };
  /**
   * Delete a theme from the database
   * @summary Delete theme
   */
  const deleteThemesId = (id: string) => {
    return customAxios<DeleteThemesId200>({
      url: `/themes/${id}`,
      method: "DELETE",
    });
  };
  return { getThemes, postThemes, getThemesId, patchThemesId, deleteThemesId };
};
export type GetThemesResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getThemes>["getThemes"]>>
>;
export type PostThemesResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getThemes>["postThemes"]>>
>;
export type GetThemesIdResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getThemes>["getThemesId"]>>
>;
export type PatchThemesIdResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getThemes>["patchThemesId"]>>
>;
export type DeleteThemesIdResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getThemes>["deleteThemesId"]>>
>;
