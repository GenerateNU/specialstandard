openapi: 3.1.3
info:
  title: The Special Standard API
  version: 0.1.0

servers:
  - url: http://localhost:8080/api/v1
    description: Development server
  - url: https://king-prawn-app-n5vk6.ondigitalocean.app/api/v1
    description: Production server

tags:
  - name: Health
    description: Health check operations
  - name: Sessions
    description: Therapy session operations
  - name: Therapists
    description: Physical Therapists Registered

paths:
  /health:
    get:
      summary: Health check
      description: Check if the API is running and healthy
      tags: [Health]
      responses:
        "200":
          description: API is healthy (status code only)
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /sessions:
    get:
      summary: Get all sessions
      description: Retrieve all therapy sessions from the database
      tags: [ Sessions ]
      responses:
        '200':
          description: List of therapy sessions
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Session'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                code: 404
                message: "Resource not found"

    post:
      summary: Creates a new session
      description: Creates a new session for the therapist
      tags: [ Sessions ]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - start_datetime
                - end_datetime
                - therapist_id
              properties:
                start_datetime:
                  type: string
                  format: date-time
                  description: Start date and time of the session
                  example: "2025-09-13T17:19:00Z"
                end_datetime:
                  type: string
                  format: date-time
                  description: End date and time of the session
                  example: "2025-09-13T18:00:00Z"
                therapist_id:
                  type: string
                  format: uuid
                  description: UUID of the Therapist
                  example: "3fa85f64-5717-4562-b3fc-2c963f66afa6"
                notes:
                  type: string
                  description: Optional notes about the session
                  example: "Daily Affirmation: My luck is so good that even four-leaf clovers ask for my autograph"
      responses:
        '201':
          description: Session created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Session'
              example:
                id: "123e4567-e89b-12d3-a456-426614174000"
                start_datetime: "2025-09-13T17:19:00Z"
                end_datetime: "2025-09-13T18:00:00Z"
                therapist_id: "3fa85f64-5717-4562-b3fc-2c963f66afa6"
                notes: "Daily Affirmation: My luck is so good that even four-leaf clovers ask for my autograph"
                created_at: "2025-09-13T10:30:00Z"
                updated_at: "2025-09-13T10:30:00Z"
        '400':
          description: Bad Request (e.g., validation errors)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                code: 400
                message: invalid json
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /sessions/{id}:
    get:
      summary: Get session by ID
      description: Retrieve a specific therapy session by its UUID
      tags: [ Sessions ]
      parameters:
        - name: id
          in: path
          required: true
          description: UUID of the Session to retrieve
          schema:
            type: string
            format: uuid
            example: "123e4567-e89b-12d3-a456-426614174000"
      responses:
        '200':
          description: Session found successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Session'
              example:
                id: "123e4567-e89b-12d3-a456-426614174000"
                start_datetime: "2025-09-13T17:19:00Z"
                end_datetime: "2025-09-13T18:00:00Z"
                therapist_id: "3fa85f64-5717-4562-b3fc-2c963f66afa6"
                notes: "Daily Affirmation: My luck is so good that even four-leaf clovers ask for my autograph"
                created_at: "2025-09-13T10:30:00Z"
                updated_at: "2025-09-13T10:30:00Z"
        '400':
          description: Bad Request (invalid UUID format)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                code: 400
                message: "Invalid UUID format"
        '404':
          description: Session not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                code: 404
                message: "Session not found"
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

    delete:
      summary: Deletes the specific Session
      description: Deletes the specific Session from the database with the given id.
      tags: [ Sessions ]
      parameters:
        - name: id
          in: path
          required: true
          description: UUID of the Session to delete
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Success String for Deleted Session Successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Deleted the Session Successfully!"
        '400':
          description: Bad Request Error (parsing invalid uuid, etc.)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                code: 400
                message: bad request
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

    patch:
      summary: Updates the specific Session
      description: Updates the Session with the given ID.
      tags: [ Sessions ]
      parameters:
        - name: id
          in: path
          required: true
          description: UUID of the Session to patch
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                start_datetime:
                  type: string
                  format: date-time
                  description: Start date and time of the session
                  example: "2025-09-13T17:19:00Z"
                end_datetime:
                  type: string
                  format: date-time
                  description: End date and time of the session
                  example: "2025-09-13T18:00:00Z"
                therapist_id:
                  type: string
                  format: uuid
                  description: UUID of the Therapist
                  example: "3fa85f64-5717-4562-b3fc-2c963f66afa6"
                notes:
                  type: string
                  description: Optional notes about the session
                  example: "Morale of the Story: Don't get attached"
      responses:
        '200':
          description: Session updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Session'
              example:
                id: "123e4567-e89b-12d3-a456-426614174000"
                start_datetime: "2025-09-13T17:19:00Z"
                end_datetime: "2025-09-13T18:00:00Z"
                therapist_id: "3fa85f64-5717-4562-b3fc-2c963f66afa6"
                notes: "Morale of the Story: Don't get attached"
                created_at: "2025-09-13T10:30:00Z"
                updated_at: "2025-09-13T10:35:00Z"
        '400':
          description: Bad request (e.g., validation errors)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                code: 400
                message: bad request
        '404':
          description: Session Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                code: 404
                message: Session Not Found
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'


  /therapists:
    get:
      summary: Get all therapists
      description: Retrieve all therapists from the database
      tags: [ Therapists ]
      responses:
        "200":
          description: A list of Therapists
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Therapist"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                code: 404
                message: "Resource not found"
    post:
      summary: Create a new therapist
      description: Create a new therapist for school districts
      tags: [Therapists]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - first_name
                - last_name
                - email
              properties:
                first_name:
                  type: string
                  description: First name of the therapist
                  example: "Kevin"
                last_name:
                  type: string
                  description: Last name of the therapist
                  example: "Matilda"
                email:
                  type: string
                  description: Email of the therapist
                  example: email123@example.com
      responses:
        "201":
          description: Therapist created successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Therapist"
        "400":
          description: Bad request (e.g., validation errors)
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /therapists/{id}:
    patch:
      summary: Update a characteristic of a given therapist
      description: Update a specific field within a therapist object in the database
      tags: [Therapists]
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
          description: Therapist ID
          example: "123e4567-e89b-12d3-a456-426614174000"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required (atleast one of the following):
                - first name
                - last name
                - email
                - active
              properties:
                first name:
                  type: string
                  description: first name of the therapist
                  example: "Kevin"
                last name:
                  type: string
                  description: last name of the therapist
                  example: "Matilda"
                email:
                  type: string
                  description: email of the therapist
                  example: email123@example.com
      responses:
        "200":
          description: Message
          content:
            application/json:
              schema:
                type: string
                items:
                  $ref: "#/components/schemas/Therapist"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "400":
          description: Not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                code: 400
                message: "There was an error parsing the given id!"
    delete:
      summary: Get the specific therapist corresponding to the given ID and delete it
      description: Retrieve a specific therapist from the database and delete it
      tags: [Therapists]
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
          description: Therapist ID
          example: "123e4567-e89b-12d3-a456-426614174000"
      responses:
        "200":
          description: Message
          content:
            application/json:
              schema:
                type: string
                items:
                  $ref: "#/components/schemas/Therapist"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "400":
          description: Not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                code: 400
                message: "Error querying database for given ID"
    get:
      summary: Get the specific therapist corresponding to the given ID
      description: Retrieve a specific therapist from the database
      tags: [Therapists]
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
          description: Therapist ID
          example: "123e4567-e89b-12d3-a456-426614174000"
      responses:
        "200":
          description: Therapist
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Therapist"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "400":
          description: Not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                code: 400
                message: "There was an error parsing the given id!"
  /themes:
    post:
      summary: Create a new theme
      description: Create a new theme for therapy sessions
      tags: [Themes]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - name
                - month
                - year
              properties:
                name:
                  type: string
                  description: Name of the theme
                  example: "Winter Wonderland"
                month:
                  type: integer
                  description: Month of the theme (1-12)
                  example: 12
                year:
                  type: integer
                  description: Year of the theme (e.g., 2024)
                  example: 2024
      responses:
        "201":
          description: Theme created successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Theme"
        "400":
          description: Bad request (e.g., validation errors)
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

components:
  schemas:
    Therapist:
      type: object
      required:
        - id
        - first_name
        - last_name
        - email
        - active
        - created_at
        - updated_at
      properties:
        id:
          type: string
          format: uuid
          description: Unique identifier for the therapist
          example: "123e4567-e89b-12d3-a456-426614174000"
        first_name:
          type: string
          example: "Kevin"
        last_name:
          type: string
          example: "Matilda"
        email:
          type: string
          format: email
          example: "email123@example.com"
        active:
          type: boolean
          description: Whether the therapist is currently active
          example: true
        created_at:
          type: string
          format: date-time
          example: "2024-01-15T10:30:00Z"
        updated_at:
          type: string
          format: date-time
          example: "2024-01-15T10:35:00Z"
    UpdateTherapistInput:
      type: object
      properties:
        first_name:
          type: string
          description: First name of the therapist
          example: "Kevin"
        last_name:
          type: string
          description: Last name of the therapist
          example: "Matilda"
        email:
          type: string
          format: email
          description: Email of the therapist
          example: "email123@example.com"
        active:
          type: boolean
          description: Whether the therapist is active
          example: true
    CreateThemeInput:
      type: object
      required:
        - name
        - month
        - year
      properties:
        name:
          type: string
          description: Name of the theme
          example: "Winter Wonderland"
        month:
          type: integer
          description: Month of the theme
          example: 12
        year:
          type: integer
          description: Year of the theme
          example: 2024
    Theme:
      type: object
      required:
        - id
        - name
        - month
        - year
        - created_at
        - updated_at
      properties:
        id:
          type: string
          format: uuid
          description: Unique identifier for the theme
          example: "123e4567-e89b-12d3-a456-426614174000"
        name:
          type: string
          description: Name of the theme
          example: "Winter Wonderland"
        month:
          type: integer
          description: Month of the theme (1-12)
          example: 12
        year:
          type: integer
          description: Year of the theme (e.g., 2024)
          example: 2024
        created_at:
          type: string
          format: date-time
          description: When the theme was created
          example: "2024-01-15T10:30:00Z"
        updated_at:
          type: string
          format: date-time
          description: When the theme was last updated
          example: "2024-01-15T10:35:00Z"

    Session:
      type: object
      required:
        - id
        - start_datetime
        - end_datetime
        - therapist_id
      properties:
        id:
          type: string
          format: uuid
          description: Unique identifier for the session
          example: "123e4567-e89b-12d3-a456-426614174000"
        start_datetime:
          type: string
          format: date-time
          description: Start date and time of the session
          example: "2024-01-15T14:30:00Z"
        end_datetime:
          type: string
          format: date-time
          description: End date and time of the session
          example: "2024-01-15T15:30:00Z"
        therapist_id:
          type: string
          format: uuid
          description: ID of the therapist conducting the session
          example: "987fcdeb-51a2-43d1-9f4c-123456789abc"
        notes:
          type: string
          nullable: true
          description: Session notes (optional)
          example: "Patient showed improvement in anxiety management techniques"
        created_at:
          type: string
          format: date-time
          nullable: true
          description: When the session record was created
          example: "2024-01-15T10:30:00Z"
        updated_at:
          type: string
          format: date-time
          nullable: true
          description: When the session record was last updated
          example: "2024-01-15T10:35:00Z"

    Error:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: integer
          description: HTTP status code
          example: 500
        message:
          anyOf:
            - type: string
            - type: object
          description: Error message or validation errors
          example: "Internal server error"

